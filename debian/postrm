#!/bin/bash

###########
# DEBCONF #
###########

if [ "$1" = "purge" -a -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi

#############
# CONSTANTS #
#############

start_spaceify="# Added by spaceify"
end_spaceify="# Added by spaceify ends"
comm_out_spaceify="# Commented out by spaceify: "

###############################################################
# REMOVE SPACEIFY'S ENTRIES/COMMENTS FROM CONFIGURATION FILES #
###############################################################

#----- /etc/network/interfaces -----#

sed -i -e "s/${comm_out_spaceify}//g" -e "/${start_spaceify}/,/${end_spaceify}/d" /etc/network/interfaces

#----- /etc/default/docker -----#

sudo sed -i "/${start_spaceify}/,/${end_spaceify}/d" /etc/default/docker

#----- /etc/rc.local -----#

sudo sed -i "/${start_spaceify}/,/${end_spaceify}/d" /etc/rc.local

#----- /etc/sysctl.conf -----#

sed -i -e "s/${comm_out_spaceify}//g" -e "/${start_spaceify}/,/${end_spaceify}/d" /etc/sysctl.conf

#----- /etc/default/hostapd -----#

sed -i -e "s/${comm_out_spaceify}//g" -e "/${start_spaceify}/,/${end_spaceify}/d" /etc/default/hostapd

#----- /etc/monit/monitrc -----#

#sed -i "/${start_spaceify}/,/${end_spaceify}/d" /etc/monit/monitrc

###########################
# REMOVE SPACEIFY'S FILES #
###########################

sudo stop spaceify > /dev/null 2>&1 || true													# stop core first
sudo stop spaceifydns > /dev/null 2>&1 || true
sudo stop spaceifydhcp > /dev/null 2>&1 || true
sudo stop spaceifyipt > /dev/null 2>&1 || true

if [ "$1" = "remove" ]; then
	sudo rm /etc/init/spaceify.conf > /dev/null 2>&1 || true
	sudo rm /etc/init/spaceifydns.conf > /dev/null 2>&1 || true
	sudo rm /etc/init/spaceifydhcp.conf > /dev/null 2>&1 || true
	sudo rm /etc/init/spaceifyipt.conf > /dev/null 2>&1 || true

	sudo rm -r /var/lib/spaceify/code > /dev/null 2>&1 || true
	sudo rm -r /var/lib/spaceify/dev/iptpiper > /dev/null 2>&1 || true
	sudo rm -r /var/lib/spaceify/dev/iptpipew > /dev/null 2>&1 || true
	printf "\n\nSpaceify's data stored in directory /var/lib/spaceify/data is not removed. Remove it by hand if necessary.\n\n"
fi

##########################################
# REMOVE SPACEIFY'S CHAINS FROM IPTABLES #
##########################################

sudo iptables -t mangle -D PREROUTING -j Spaceify-mangle > /dev/null 2>&1 || true
sudo iptables -t mangle -F Spaceify-mangle > /dev/null 2>&1 || true
sudo iptables -t mangle -X Spaceify-mangle > /dev/null 2>&1 || true
sudo iptables -t nat -D PREROUTING -m mark --mark 99 -p tcp --dport 80 -j DNAT --to-destination 10.0.0.1 > /dev/null 2>&1 || true
sudo iptables -t nat -D PREROUTING -m mark --mark 99 -p tcp --dport 443 -j DNAT --to-destination 10.0.0.1 > /dev/null 2>&1 || true
sudo iptables -t filter -D FORWARD -m mark --mark 99 -j DROP > /dev/null 2>&1 || true

sudo iptables -t nat -D PREROUTING -j Spaceify-HTTP-Nat-Redir > /dev/null 2>&1 || true
sudo iptables -t nat -D POSTROUTING -j Spaceify-HTTP-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -F Spaceify-HTTP-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -X Spaceify-HTTP-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -F Spaceify-HTTP-Nat-Redir > /dev/null 2>&1 || true
sudo iptables -t nat -X Spaceify-HTTP-Nat-Redir > /dev/null 2>&1 || true

sudo iptables -t nat -D PREROUTING -j Spaceify-HTTPS-Nat-Redir > /dev/null 2>&1 || true
sudo iptables -t nat -D POSTROUTING -j Spaceify-HTTPS-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -F Spaceify-HTTPS-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -X Spaceify-HTTPS-Nat-Masq > /dev/null 2>&1 || true
sudo iptables -t nat -F Spaceify-HTTPS-Nat-Redir > /dev/null 2>&1 || true
sudo iptables -t nat -X Spaceify-HTTPS-Nat-Redir > /dev/null 2>&1 || true

###########################
# REMOVE APPLICATION DATA #
###########################

sudo docker stop $(docker ps -a -q)															# Stop and remove all containers
sudo docker rm $(docker ps -a -q)

#dbs="/var/lib/spaceify/data/db/spaceify.db"

#rows=$(sqlite3 $dbs -separator ";" "SELECT unique_name, unique_directory, docker_image_id, type FROM applications")
#splt=(${rows//$';'/ })

#iter=$((${#splt[@]} - 4))
#for i in $(seq 0 4 $iter); do
#
#	unique_name=${splt[$i]}
#	unique_directory=${splt[$(($i + 1))]}
#	docker_image_id=${splt[$(($i + 2))]}
#	type=${splt[$(($i + 3))]}
#
#	#$(sqlite3 $dbs "DELETE FROM applications WHERE unique_name='${unique_name}'")			# Delete database entries (for possible reinstall leave them undeleted)
#	#$(sqlite3 $dbs "DELETE FROM provided_services WHERE unique_name='${unique_name}'")
#	#$(sqlite3 $dbs "DELETE FROM inject_hostnames WHERE unique_name='${unique_name}'")
#	#$(sqlite3 $dbs "DELETE FROM inject_files WHERE unique_name='${unique_name}'")
#
#	sudo docker rmi $docker_image_id  > /dev/null 2>&1 || true								# Remove application images
#
#	directory=""																			# Remove applications files but leave persistent volume untouched
#	if [[ "$type" == "spacelet" ]]; then
#		directory="/var/lib/spaceify/data/spacelets/${unique_directory}volume/"
#	elif [[ "$type" == "sandboxed" ]]; then
#		directory="/var/lib/spaceify/data/sandboxed/${unique_directory}volume/"
#	elif [[ "$type" == "native" ]]; then
#		directory="/var/lib/spaceify/data/native/${unique_directory}volume/"	
#	fi
#
#	sudo rm -r "${directory}application" > /dev/null 2>&1 || true
#	sudo rm -r "${directory}tls" > /dev/null 2>&1 || true
#
#done

#sudo docker rmi spaceifyubuntu > /dev/null 2>&1 || true									# Remove Spaceify's images
