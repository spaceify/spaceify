#! /bin/sh

set -e

# SPACEIFY STARTS   -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

# Create root certificate authority and server certificate
cd /etc/squid3/certs

chmod 0744 ./makeca.sh
chmod 0744 ./makeserver.sh

./makeca.sh
./makeserver.sh

# Initialize Squid's certificate database
sudo rm -rf /var/lib/ssl_db > /dev/null 2>&1 || true
sudo /usr/lib/squid3/ssl_crtd -c -s /var/lib/ssl_db/ > /dev/null 2>&1 || true
sudo chown proxy.proxy -R /var/lib/ssl_db/ > /dev/null 2>&1 || true

# SPACEIFY ENDS  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

grepconf () {
	w=" 	" # space tab
	sq=/etc/squid3/squid.conf
	# sed is cool.
	res=`sed -ne '
		s/^'$1'['"$w"']\+\([^'"$w"']\+\).*$/\1/p;
		t end;
		d;
		:end q' < $sq`
	[ -n "$res" ] || res=$2
	echo "$res"
}

grepconf2 () {
	w=" 	" # space tab
	sq=/etc/squid3/squid.conf
	# sed is cool.
	res=`sed -ne '
		s/^'$1'['"$w"']\+[^'"$w"']\+['"$w"']\+\([^'"$w"']\+\).*$/\1/p;
		t end;
		d;
		:end q' < $sq`
	[ -n "$res" ] || res=$2
	echo "$res"
}

case "$1" in
	configure)
		#
		# Chown the directories.
		#
		log_dir=/var/log/squid3
		cache_dir=`grepconf2 cache_dir /var/spool/squid3`
		usr=`grepconf cache_effective_user proxy`
		grp=`grepconf cache_effective_group proxy`
		
		if [ "$(stat -c %U $cache_dir)" != "$usr" ] ||
		   [ "$(stat -c %G $cache_dir)" != "$grp" ] ; then
			chown $usr:$grp $cache_dir -R
		fi
		
		if [ "$(stat -c %U $log_dir)" != "$usr" ] ||
		   [ "$(stat -c %G $log_dir)" != "$grp" ] ; then
			if [ "$(dpkg-statoverride --list $log_dir)" = "" ] ; then
		  		chown -R $usr:$grp $log_dir
			fi
		fi
	 
		#
		# Create spool dirs if they don't exist.
		#
		if [ -d "$cache_dir" -a ! -d "$cache_dir/00" ]
		then
			echo "Creating Squid HTTP proxy 3.x spool directory structure"
			squid3 -z
		fi
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		;;
	*)
		#
		#	Unknown action - do nothing.
		#
		exit 0
		;;
esac

if [ -e "/etc/init/squid3.conf" ] ; then
	# Using stop/start because restart fails to reload the upstart job
    # file. See LP: #707479.
	invoke-rc.d squid3 stop || :
	invoke-rc.d squid3 start
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_apparmor
if [ "$1" = "configure" ]; then
    APP_PROFILE="/etc/apparmor.d/usr.sbin.squid3"
    if [ -f "$APP_PROFILE" ]; then
        # Add the local/ include
        LOCAL_APP_PROFILE="/etc/apparmor.d/local/usr.sbin.squid3"

        test -e "$LOCAL_APP_PROFILE" || {
            tmp=`mktemp`
        cat <<EOM > "$tmp"
# Site-specific additions and overrides for usr.sbin.squid3.
# For more details, please see /etc/apparmor.d/local/README.
EOM
            mkdir `dirname "$LOCAL_APP_PROFILE"` 2>/dev/null || true
            mv -f "$tmp" "$LOCAL_APP_PROFILE"
            chmod 644 "$LOCAL_APP_PROFILE"
        }

        # Reload the profile, including any abstraction updates
        if aa-status --enabled 2>/dev/null; then
            apparmor_parser -r -T -W "$APP_PROFILE" || true
        fi
    fi
fi
# End automatically added section
# Automatically added by dh_installinit
if [ -x "/etc/init.d/squid3" ] || [ -e "/etc/init/squid3.conf" ]; then
	if [ ! -e "/etc/init/squid3.conf" ]; then
		update-rc.d squid3 defaults >/dev/null
	fi
	invoke-rc.d squid3 start || exit $?
fi
# End automatically added section
# Automatically added by dh_installinit
update-rc.d -f squid3 remove >/dev/null || exit $?
# End automatically added section


exit 0
