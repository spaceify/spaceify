# Makefile.in generated by automake 1.11.1 from Makefile.am.
# errors/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/squid
pkgincludedir = $(includedir)/squid
pkglibdir = $(libdir)/squid
pkglibexecdir = $(libexecdir)/squid
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/language.list $(srcdir)/template.list
subdir = errors
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude/init.m4 \
	$(top_srcdir)/acinclude/squid-util.m4 \
	$(top_srcdir)/acinclude/compiler-flags.m4 \
	$(top_srcdir)/acinclude/os-deps.m4 \
	$(top_srcdir)/acinclude/krb5.m4 $(top_srcdir)/acinclude/pam.m4 \
	$(top_srcdir)/acinclude/pkg.m4 \
	$(top_srcdir)/acinclude/lib-checks.m4 \
	$(top_srcdir)/acinclude/ax_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/acinclude/ax_cxx_0x_types.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/autoconf.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run aclocal-1.11
ADAPTATION_LIBS = adaptation/libadaptation.la
ALLOCA = 
AMTAR = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run tar
AR = /usr/bin/ar
ARGZ_H = 
AR_R = /usr/bin/ar r
AUTH_LIBS_TO_BUILD =  basic/libbasic.la ntlm/libntlm.la negotiate/libnegotiate.la digest/libdigest.la
AUTH_MODULES =  basic ntlm negotiate digest
AUTOCONF = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run autoconf
AUTOHEADER = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run autoheader
AUTOMAKE = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run automake-1.11
AWK = gawk
BASIC_AUTH_HELPERS =  DB fake getpwnam LDAP MSNT MSNT-multi-domain NCSA NIS PAM POP3 RADIUS SASL SMB
BZR = 
CACHE_EFFECTIVE_USER = proxy
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -m64 -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall
CGIEXT = .cgi
CHMOD = /bin/chmod
CPP = gcc -E
CPPFLAGS = -I/usr/include/libxml2 -D_FORTIFY_SOURCE=2  
CPPUNITCONFIG = /usr/bin/cppunit-config
CRYPTLIB = -lcrypt
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -m64 -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -std=c++0x
CYGPATH_W = echo
DEFAULT_HOSTS = /etc/hosts
DEFAULT_LOG_DIR = /var/log/squid3
DEFAULT_PID_FILE = /var/run/squid3.pid
DEFAULT_SWAP_DIR = /var/spool/squid3
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIGEST_AUTH_HELPERS =  file LDAP
DISK_LIBS =  libAIO.a libBlocking.a libDiskDaemon.a libDiskThreads.a libIpcIo.a libMmapped.a
DISK_LINKOBJS =  DiskIO/AIO/AIODiskIOModule.o DiskIO/Blocking/BlockingDiskIOModule.o DiskIO/DiskDaemon/DiskDaemonDiskIOModule.o DiskIO/DiskThreads/DiskThreadsDiskIOModule.o DiskIO/IpcIo/IpcIoDiskIOModule.o DiskIO/Mmapped/MmappedDiskIOModule.o
DISK_MODULES =  AIO Blocking DiskDaemon DiskThreads IpcIo Mmapped
DISK_OS_LIBS =  -lrt -lpthread
DISK_PROGRAMS =  DiskIO/DiskDaemon/diskd
DSYMUTIL = 
DUMPBIN = 
ECAP_LIBS = ecap/libsquid-ecap.la
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/egrep
EPOLL_LIBS = 
EUILIB = 
EXEEXT = 
EXPATLIB = -lexpat
EXTERNAL_ACL_HELPERS =  LDAP_group session SQL_session unix_group wbinfo_group
EXT_LIBECAP_CFLAGS =  
EXT_LIBECAP_LIBS = -lecap  
FALSE = /bin/false
FGREP = /bin/fgrep
GREP = grep
HOSTCXX = g++
ICAP_LIBS = icap/libicap.la
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KRB5INCS =  
KRB5LIBS = -Wl,-Bsymbolic-functions -Wl,-z,relro -lgssapi_krb5 -lkrb5 -lk5crypto -lcom_err -Wl,-Bsymbolic-functions -Wl,-z,relro -lkrb5 -lk5crypto -lcom_err
LBERLIB = -llber
LD = /usr/bin/ld -m elf_x86_64
LDAPLIB = -lldap
LDFLAGS = -m64 -Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now
LIBADD_DL = -ldl
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBLTDL = -lltdl
LIBOBJS =  ${LIBOBJDIR}eui64_aton$U.o
LIBS = 
LIBSASL = -lsasl2
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_DB = -ldb
LIPO = 
LN = /bin/ln
LN_S = ln -s
LOG_DAEMON_HELPERS =  DB file
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS =  ${LIBOBJDIR}eui64_aton$U.lo
LT_CONFIG_H = include/autoconf.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
MAINT = #
MAKEINFO = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/missing --run makeinfo
MINGW_LIBS = 
MKDIR = /bin/mkdir
MKDIR_P = /bin/mkdir -p
MV = /bin/mv
NEGOTIATE_AUTH_HELPERS =  kerberos wrapper
NM = /usr/bin/nm -B
NMEDIT = 
NTLM_AUTH_HELPERS =  fake smb_lm
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = squid
PACKAGE_BUGREPORT = http://bugs.squid-cache.org/
PACKAGE_NAME = Squid Web Proxy
PACKAGE_STRING = Squid Web Proxy 3.3.8
PACKAGE_TARNAME = squid
PACKAGE_URL = 
PACKAGE_VERSION = 3.3.8
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PO2HTML = off
PO2TEXT = off
POD2MAN = /usr/bin/pod2man
RANLIB = ranlib
REGEXLIB = 
REPL_LIBS = liblru.a libheap.a
REPL_OBJS = repl/liblru.a repl/libheap.a
REPL_POLICIES = lru heap
RM = /bin/rm -f
SED = /bin/sed
SET_MAKE = 
SH = /bin/sh
SHELL = /bin/bash
SNMPLIB = ../snmplib/libsnmplib.a
SQUID_CFLAGS = -Wall -Wpointer-arith -Wwrite-strings -Wmissing-prototypes -Wmissing-declarations -Wcomments -Werror -pipe -D_REENTRANT
SQUID_CPPUNIT_INC = 
SQUID_CPPUNIT_LA = 
SQUID_CPPUNIT_LIBS = -L/usr/lib/x86_64-linux-gnu -lcppunit -ldl
SQUID_CXXFLAGS = -I/usr/include/libxml2 -Wall -Wpointer-arith -Wwrite-strings -Wcomments -Werror -pipe -D_REENTRANT
SSLLIB = -lssl -lcrypto
STORE_LIBS_TO_ADD =  fs/libufs.la fs/libaufs.la fs/libdiskd.la fs/librock.la
STORE_LIBS_TO_BUILD =  libufs.la libaufs.la libdiskd.la librock.la
STORE_TESTS =  tests/testUfs tests/testRock
STRIP = strip
TR = /usr/bin/tr
TRUE = /bin/true
URL_REWRITE_HELPERS =  fake
VERSION = 3.3.8
WIN32_PSAPI = 
XMLLIB = -lxml2
XTRA_LIBS = -lm -lnsl -lresolv -lcap -lnetfilter_conntrack -lrt -ldl -ldl
XTRA_OBJS = 
abs_builddir = /var/lib/spaceify/squid/squid3-3.3.8.spaceify/errors
abs_srcdir = /var/lib/spaceify/squid/squid3-3.3.8.spaceify/errors
abs_top_builddir = /var/lib/spaceify/squid/squid3-3.3.8.spaceify
abs_top_srcdir = /var/lib/spaceify/squid/squid3-3.3.8.spaceify
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_krb5_config = yes
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share/squid3
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = ${SHELL} /var/lib/spaceify/squid/squid3-3.3.8.spaceify/cfgaux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${prefix}/lib/squid3
localedir = ${datarootdir}/locale
localstatedir = /var
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
makesnmplib = snmplib
mandir = /usr/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl lib/libTrie
sys_symbol_underscore = no
sysconfdir = /etc/squid3
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
errordir = $(datadir)/errors
DEFAULT_ERROR_DIR = $(errordir)
DEFAULT_STYLESHEET = $(sysconfdir)/errorpage.css
ERROR_TEMPLATES = \
    templates/ERR_ACCESS_DENIED \
    templates/ERR_ACL_TIME_QUOTA_EXCEEDED \
    templates/ERR_AGENT_CONFIGURE \
    templates/ERR_AGENT_WPAD \
    templates/ERR_CACHE_ACCESS_DENIED \
    templates/ERR_CACHE_MGR_ACCESS_DENIED \
    templates/ERR_CANNOT_FORWARD \
    templates/ERR_CONFLICT_HOST \
    templates/ERR_CONNECT_FAIL \
    templates/ERR_DIR_LISTING \
    templates/ERR_DNS_FAIL \
    templates/ERR_ESI \
    templates/ERR_FORWARDING_DENIED \
    templates/ERR_FTP_DISABLED \
    templates/ERR_FTP_FAILURE \
    templates/ERR_FTP_FORBIDDEN \
    templates/ERR_FTP_NOT_FOUND \
    templates/ERR_FTP_PUT_CREATED \
    templates/ERR_FTP_PUT_ERROR \
    templates/ERR_FTP_PUT_MODIFIED \
    templates/ERR_FTP_UNAVAILABLE \
    templates/ERR_GATEWAY_FAILURE \
    templates/ERR_ICAP_FAILURE \
    templates/ERR_INVALID_REQ \
    templates/ERR_INVALID_RESP \
    templates/ERR_INVALID_URL \
    templates/ERR_LIFETIME_EXP \
    templates/ERR_NO_RELAY \
    templates/ERR_ONLY_IF_CACHED_MISS \
    templates/ERR_PRECONDITION_FAILED \
    templates/ERR_READ_ERROR \
    templates/ERR_READ_TIMEOUT \
    templates/ERR_SECURE_CONNECT_FAIL \
    templates/ERR_SHUTTING_DOWN \
    templates/ERR_SOCKET_FAILURE \
    templates/ERR_TOO_BIG \
    templates/ERR_UNSUP_HTTPVERSION \
    templates/ERR_UNSUP_REQ \
    templates/ERR_URN_RESOLVE \
    templates/ERR_WRITE_ERROR \
    templates/ERR_ZERO_SIZE_OBJECT 

TRANSLATE_LANGUAGES = \
    af.lang \
    ar.lang \
    az.lang \
    bg.lang \
    ca.lang \
    cs.lang \
    da.lang \
    de.lang \
    el.lang \
    en.lang \
    es.lang \
    et.lang \
    fa.lang \
    fi.lang \
    fr.lang \
    he.lang \
    hu.lang \
    hy.lang \
    id.lang \
    it.lang \
    ja.lang \
    ko.lang \
    lt.lang \
    lv.lang \
    ms.lang \
    nl.lang \
    oc.lang \
    pl.lang \
    pt-br.lang \
    pt.lang \
    ro.lang \
    ru.lang \
    sk.lang \
    sl.lang \
    sr-cyrl.lang \
    sr-latn.lang \
    sv.lang \
    th.lang \
    tr.lang \
    uk.lang \
    uz.lang \
    vi.lang \
    zh-cn.lang \
    zh-tw.lang 

CLEANFILES = $(TRANSLATE_LANGUAGES) translate-warn
EXTRA_DIST = \
	$(ERROR_TEMPLATES) \
	templates/error-details.txt \
	language.list \
	template.list \
	aliases alias-link.sh alias-upgrade errorpage.css TRANSLATORS COPYRIGHT

NOTIDY = `$(PO2HTML) --help | grep -o "\-\-notidy"`
all: all-am

.SUFFIXES:
.SUFFIXES: .lang .po
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/template.list $(srcdir)/language.list $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign errors/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign errors/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	dist-hook distclean distclean-generic distclean-libtool \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-data-local \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-local install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-local


all: all-am

translate: translate-warn $(TRANSLATE_LANGUAGES)

translate-warn:
	case "$(PO2HTML)" in \
	off) \
	    echo "WARNING: Translation is disabled."; \
	    ;; \
	""|no) \
	    echo "WARNING: Translation toolkit was not detected."; \
	    ;; \
	esac; \
	touch translate-warn

$(TRANSLATE_LANGUAGES): $(ERROR_TEMPLATES)

.po.lang:
	if test "$(PO2HTML)" != "" && test "$(PO2HTML)" != "no" && test "$(PO2HTML)" != "off" && test -f $(top_srcdir)/errors/en.po; then \
	    lang=`basename $@ .lang`; \
	    mkdir -p $(top_builddir)/errors/$$lang; \
	    echo -n "Translate '$$lang' ..."; \
	    for f in $(ERROR_TEMPLATES); do \
		page=`basename $$f`; \
		$(PO2HTML) $(NOTIDY) --progress=none -i $(top_srcdir)/errors/$$lang.po -t $(top_srcdir)/errors/$$f >$(top_builddir)/errors/$$lang/$$page || exit 1; \
	    done; \
	    cp $(top_srcdir)/errors/templates/error-details.txt $(top_builddir)/errors/$$lang/error-details.txt || exit 1; \
	    echo "done."; \
	fi; \
	touch $@

install-exec-local: translate
	if test -f $(DESTDIR)$(DEFAULT_STYLESHEET) ; then \
		echo "$@ will not overwrite existing $(DESTDIR)$(DEFAULT_STYLESHEET)" ; \
	else \
		$(mkinstalldirs) $(DESTDIR)`dirname $(DEFAULT_STYLESHEET)` ; \
		echo "$(INSTALL_DATA) $(srcdir)/errorpage.css $(DESTDIR)$(DEFAULT_STYLESHEET)"; \
		$(INSTALL_DATA) $(srcdir)/errorpage.css $(DESTDIR)$(DEFAULT_STYLESHEET); \
	fi

install-data-local: translate
	$(mkinstalldirs) $(DESTDIR)$(DEFAULT_ERROR_DIR) ; \
	for l in $(TRANSLATE_LANGUAGES) templates; do \
	    l=`basename $$l .lang`; \
	    echo "Located $$l for install..."; \
	    if test -d $(srcdir)/$$l || test -d $(builddir)/$$l; then \
		$(mkinstalldirs) $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l; \
	    fi; \
	    for f in $(ERROR_TEMPLATES) templates/error-details.txt; do \
		page=`basename $$f`; \
		if test -f $(builddir)/$$l/$$page; then \
		    echo "$(INSTALL_DATA) $(builddir)/$$l/$$page $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l"; \
			    $(INSTALL_DATA) $(builddir)/$$l/$$page $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l; \
		elif test -f $(srcdir)/$$l/$$page; then \
		    echo "$(INSTALL_DATA) $(srcdir)/$$l/$$page $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l"; \
			    $(INSTALL_DATA) $(srcdir)/$$l/$$page $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l; \
		fi; \
	    done; \
	done; \
	$(INSTALL_DATA) $(srcdir)/TRANSLATORS $(DESTDIR)$(DEFAULT_ERROR_DIR)/TRANSLATORS; \
	$(INSTALL_DATA) $(srcdir)/COPYRIGHT $(DESTDIR)$(DEFAULT_ERROR_DIR)/COPYRIGHT; \
	$(INSTALL_DATA) $(srcdir)/errorpage.css $(DESTDIR)$(DEFAULT_STYLESHEET).default; \
	$(SHELL) $(srcdir)/alias-link.sh "$(LN)" "$(RM)" "$(DESTDIR)$(DEFAULT_ERROR_DIR)" "$(srcdir)/aliases" || exit 1 ;

uninstall-local:
	for l in $(TRANSLATE_LANGUAGES) templates; do \
	  l=`basename $$l .lang`; \
	  echo "Located $$l for uninstall ..."; \
	  if test -d $(srcdir)/$$l; then \
		for f in $(srcdir)/$$l/ERR_* $(srcdir)/$$l/error-details.txt; do \
			if test -f $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l/`basename $$f`; then \
		        	$(RM) $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l/`basename $$f`; \
			fi; \
		done; \
	  fi ; \
	  if test -d $(builddir)/$$l; then \
		for f in $(builddir)/$$l/ERR_* $(builddir)/$$l/error-details.txt; do \
			if test -f $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l/`basename $$f`; then \
		        	$(RM) $(DESTDIR)$(DEFAULT_ERROR_DIR)/$$l/`basename $$f`; \
			fi; \
		done; \
	  fi \
	done;
	@$(SHELL) $(top_srcdir)/scripts/remove-cfg.sh "$(RM)" $(DESTDIR)$(DEFAULT_STYLESHEET)
	rm -f $(DESTDIR)$(DEFAULT_STYLESHEET).default
	rm -f $(DESTDIR)$(DEFAULT_ERROR_DIR)/TRANSLATORS
	rm -f $(DESTDIR)$(DEFAULT_ERROR_DIR)/COPYRIGHT

upgrade: install
	$(SHELL) $(srcdir)/alias-link.sh "$(LN)" "$(RM)" "$(DESTDIR)$(DEFAULT_ERROR_DIR)" "$(srcdir)/alias-upgrade" || exit 1 ;

dist-hook: translate
	for lang in $(TRANSLATE_LANGUAGES); do \
	  lang=`basename $$lang .lang`; \
	  if test -d $$lang ; then \
		mkdir -p $(distdir)/$$lang; \
		cp -p $(top_builddir)/errors/$$lang/ERR_*  $(distdir)/$$lang || exit 1; \
		cp -p $(top_builddir)/errors/$$lang/error-details.txt $(distdir)/$$lang || exit 1; \
	  fi; \
	done

clean: clean-am
	if test "$(PO2HTML)" != "" && test "$(PO2HTML)" != "no" && test "$(PO2HTML)" != "off" && test -f $(top_srcdir)/errors/en.po; then \
	  for lang in $(TRANSLATE_LANGUAGES); do \
	    lang=`basename $$lang .lang`; \
	    rm -rf $$lang; \
	  done; \
	fi

all: translate

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
